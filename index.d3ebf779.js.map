{"mappings":"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","sources":["src/js/refs.js","src/js/services/creatMurkup.js","src/index.js","node_modules/slim-select/dist/slimselect.umd.js","src/js/services/cat-api.js"],"sourcesContent":["\nexport default {\n    selektEl:document.querySelector('select'),\n    loaderEl:document.querySelector('.loader'),\n    errorEl: document.querySelector('.error'),\n    catInfo: document.querySelector('.cat-info')\n}","import refs from \"../refs\"\nconst { selektEl } = refs\n\nfunction creatMarkup(data) {\n   return  data.map(({ id, name }) => ({ text: name, value: id }))\n   \n};\n\nfunction creatMarkupCat(arr) {\n   \n   return arr.map(({ url, breeds: ( name, description, temperament ) })) `<img src=\"${url}\" alt=\"${name}\" width = 300px />\n      <h1>${name}</h1>\n      <p>${description}</p>\n      <p>${temperament}</p>`\n}\n\nexport {creatMarkup, creatMarkupCat}","import { fetchBreeds, fetchCatByBreed } from \"./js/services/cat-api\";\nimport { creatMarkup, creatMarkupCat } from \"./js/services/creatMurkup\";\n// import creatMarkup from \"./js/services/creatMurkup\";\nimport refs from \"./js/refs\";\nimport SlimSelect from 'slim-select'\n\nconst sel = new SlimSelect({\n  select: '.breed-select'\n})\n\nconst { selektEl, catInfo } = refs\n\nfetchBreeds()\n    .then(element =>\n        sel.setData(creatMarkup(element))\n    )\n    .catch(console.log);\n\nselektEl.addEventListener('change', onSelectCat)\n\nfunction onSelectCat(e) {\n  const id = e.target.value\n  console.log(id);\n  \n  fetchCatByBreed(id).then(data =>\n  console.log(data))\n  //  catInfo.insertAdjacentHTML('afterbegin', creatMarkupCat(data)))\n}","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.SlimSelect = factory());\n})(this, (function () { 'use strict';\n\n    function generateID() {\n        return Math.random().toString(36).substring(2, 10);\n    }\n    function hasClassInTree(element, className) {\n        function hasClass(e, c) {\n            if (c && e && e.classList && e.classList.contains(c)) {\n                return e;\n            }\n            if (c && e && e.dataset && e.dataset.id && e.dataset.id === className) {\n                return e;\n            }\n            return null;\n        }\n        function parentByClass(e, c) {\n            if (!e || e === document) {\n                return null;\n            }\n            else if (hasClass(e, c)) {\n                return e;\n            }\n            else {\n                return parentByClass(e.parentNode, c);\n            }\n        }\n        return hasClass(element, className) || parentByClass(element, className);\n    }\n    function debounce(func, wait = 50, immediate = false) {\n        let timeout;\n        return function (...args) {\n            const context = self;\n            const later = () => {\n                timeout = null;\n                if (!immediate) {\n                    func.apply(context, args);\n                }\n            };\n            const callNow = immediate && !timeout;\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n            if (callNow) {\n                func.apply(context, args);\n            }\n        };\n    }\n    function isEqual(a, b) {\n        return JSON.stringify(a) === JSON.stringify(b);\n    }\n    function kebabCase(str) {\n        const result = str.replace(/[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g, (match) => '-' + match.toLowerCase());\n        return str[0] === str[0].toUpperCase() ? result.substring(1) : result;\n    }\n\n    class Settings {\n        constructor(settings) {\n            this.id = '';\n            this.style = '';\n            this.class = [];\n            this.isMultiple = false;\n            this.isOpen = false;\n            this.isFullOpen = false;\n            this.intervalMove = null;\n            if (!settings) {\n                settings = {};\n            }\n            this.id = 'ss-' + generateID();\n            this.style = settings.style || '';\n            this.class = settings.class || [];\n            this.disabled = settings.disabled !== undefined ? settings.disabled : false;\n            this.alwaysOpen = settings.alwaysOpen !== undefined ? settings.alwaysOpen : false;\n            this.showSearch = settings.showSearch !== undefined ? settings.showSearch : true;\n            this.searchPlaceholder = settings.searchPlaceholder || 'Search';\n            this.searchText = settings.searchText || 'No Results';\n            this.searchingText = settings.searchingText || 'Searching...';\n            this.searchHighlight = settings.searchHighlight !== undefined ? settings.searchHighlight : false;\n            this.closeOnSelect = settings.closeOnSelect !== undefined ? settings.closeOnSelect : true;\n            this.contentLocation = settings.contentLocation || document.body;\n            this.contentPosition = settings.contentPosition || 'absolute';\n            this.openPosition = settings.openPosition || 'auto';\n            this.placeholderText = settings.placeholderText !== undefined ? settings.placeholderText : 'Select Value';\n            this.allowDeselect = settings.allowDeselect !== undefined ? settings.allowDeselect : false;\n            this.hideSelected = settings.hideSelected !== undefined ? settings.hideSelected : false;\n            this.showOptionTooltips = settings.showOptionTooltips !== undefined ? settings.showOptionTooltips : false;\n            this.minSelected = settings.minSelected || 0;\n            this.maxSelected = settings.maxSelected || 1000;\n            this.timeoutDelay = settings.timeoutDelay || 200;\n            this.maxValuesShown = settings.maxValuesShown || 20;\n            this.maxValuesMessage = settings.maxValuesMessage || '{number} selected';\n        }\n    }\n\n    class Optgroup {\n        constructor(optgroup) {\n            this.id = !optgroup.id || optgroup.id === '' ? generateID() : optgroup.id;\n            this.label = optgroup.label || '';\n            this.selectAll = optgroup.selectAll === undefined ? false : optgroup.selectAll;\n            this.closable = optgroup.closable || 'off';\n            this.options = [];\n            if (optgroup.options) {\n                for (const o of optgroup.options) {\n                    this.options.push(new Option(o));\n                }\n            }\n        }\n    }\n    class Option {\n        constructor(option) {\n            this.id = !option.id || option.id === '' ? generateID() : option.id;\n            this.value = option.value === undefined ? option.text : option.value;\n            this.text = option.text || '';\n            this.html = option.html || '';\n            this.selected = option.selected !== undefined ? option.selected : false;\n            this.display = option.display !== undefined ? option.display : true;\n            this.disabled = option.disabled !== undefined ? option.disabled : false;\n            this.mandatory = option.mandatory !== undefined ? option.mandatory : false;\n            this.placeholder = option.placeholder !== undefined ? option.placeholder : false;\n            this.class = option.class || '';\n            this.style = option.style || '';\n            this.data = option.data || {};\n        }\n    }\n    class Store {\n        constructor(type, data) {\n            this.selectType = 'single';\n            this.data = [];\n            this.selectType = type;\n            this.setData(data);\n        }\n        validateDataArray(data) {\n            if (!Array.isArray(data)) {\n                return new Error('Data must be an array');\n            }\n            for (let dataObj of data) {\n                if (dataObj instanceof Optgroup || 'label' in dataObj) {\n                    if (!('label' in dataObj)) {\n                        return new Error('Optgroup must have a label');\n                    }\n                    if ('options' in dataObj && dataObj.options) {\n                        for (let option of dataObj.options) {\n                            return this.validateOption(option);\n                        }\n                    }\n                }\n                else if (dataObj instanceof Option || 'text' in dataObj) {\n                    return this.validateOption(dataObj);\n                }\n                else {\n                    return new Error('Data object must be a valid optgroup or option');\n                }\n            }\n            return null;\n        }\n        validateOption(option) {\n            if (!('text' in option)) {\n                return new Error('Option must have a text');\n            }\n            return null;\n        }\n        partialToFullData(data) {\n            let dataFinal = [];\n            data.forEach((dataObj) => {\n                if (dataObj instanceof Optgroup || 'label' in dataObj) {\n                    let optOptions = [];\n                    if ('options' in dataObj && dataObj.options) {\n                        dataObj.options.forEach((option) => {\n                            optOptions.push(new Option(option));\n                        });\n                    }\n                    if (optOptions.length > 0) {\n                        dataFinal.push(new Optgroup(dataObj));\n                    }\n                }\n                if (dataObj instanceof Option || 'text' in dataObj) {\n                    dataFinal.push(new Option(dataObj));\n                }\n            });\n            return dataFinal;\n        }\n        setData(data) {\n            this.data = this.partialToFullData(data);\n            if (this.selectType === 'single') {\n                this.setSelectedBy('value', this.getSelected());\n            }\n        }\n        getData() {\n            return this.filter(null, true);\n        }\n        getDataOptions() {\n            return this.filter(null, false);\n        }\n        addOption(option) {\n            this.setData(this.getData().concat(new Option(option)));\n        }\n        setSelectedBy(selectedType, selectedValues) {\n            let firstOption = null;\n            let hasSelected = false;\n            for (let dataObj of this.data) {\n                if (dataObj instanceof Optgroup) {\n                    for (let option of dataObj.options) {\n                        if (!firstOption) {\n                            firstOption = option;\n                        }\n                        option.selected = hasSelected ? false : selectedValues.includes(option[selectedType]);\n                        if (option.selected && this.selectType === 'single') {\n                            hasSelected = true;\n                        }\n                    }\n                }\n                if (dataObj instanceof Option) {\n                    if (!firstOption) {\n                        firstOption = dataObj;\n                    }\n                    dataObj.selected = hasSelected ? false : selectedValues.includes(dataObj[selectedType]);\n                    if (dataObj.selected && this.selectType === 'single') {\n                        hasSelected = true;\n                    }\n                }\n            }\n            if (this.selectType === 'single' && firstOption && !hasSelected) {\n                firstOption.selected = true;\n            }\n        }\n        getSelected() {\n            let selectedOptions = this.getSelectedOptions();\n            let selectedValues = [];\n            selectedOptions.forEach((option) => {\n                selectedValues.push(option.value);\n            });\n            return selectedValues;\n        }\n        getSelectedOptions() {\n            return this.filter((opt) => {\n                return opt.selected;\n            }, false);\n        }\n        getSelectedIDs() {\n            let selectedOptions = this.getSelectedOptions();\n            let selectedIDs = [];\n            selectedOptions.forEach((op) => {\n                selectedIDs.push(op.id);\n            });\n            return selectedIDs;\n        }\n        getOptgroupByID(id) {\n            for (let dataObj of this.data) {\n                if (dataObj instanceof Optgroup && dataObj.id === id) {\n                    return dataObj;\n                }\n            }\n            return null;\n        }\n        getOptionByID(id) {\n            let options = this.filter((opt) => {\n                return opt.id === id;\n            }, false);\n            return options.length ? options[0] : null;\n        }\n        search(search, searchFilter) {\n            search = search.trim();\n            if (search === '') {\n                return this.getData();\n            }\n            return this.filter((opt) => {\n                return searchFilter(opt, search);\n            }, true);\n        }\n        filter(filter, includeOptgroup) {\n            const dataSearch = [];\n            this.data.forEach((dataObj) => {\n                if (dataObj instanceof Optgroup) {\n                    let optOptions = [];\n                    dataObj.options.forEach((option) => {\n                        if (!filter || filter(option)) {\n                            if (!includeOptgroup) {\n                                dataSearch.push(new Option(option));\n                            }\n                            else {\n                                optOptions.push(new Option(option));\n                            }\n                        }\n                    });\n                    if (optOptions.length > 0) {\n                        let optgroup = new Optgroup(dataObj);\n                        optgroup.options = optOptions;\n                        dataSearch.push(optgroup);\n                    }\n                }\n                if (dataObj instanceof Option) {\n                    if (!filter || filter(dataObj)) {\n                        dataSearch.push(new Option(dataObj));\n                    }\n                }\n            });\n            return dataSearch;\n        }\n        getSelectType() {\n            return this.selectType;\n        }\n    }\n\n    class Render {\n        constructor(settings, store, callbacks) {\n            this.classes = {\n                main: 'ss-main',\n                placeholder: 'ss-placeholder',\n                values: 'ss-values',\n                single: 'ss-single',\n                max: 'ss-max',\n                value: 'ss-value',\n                valueText: 'ss-value-text',\n                valueDelete: 'ss-value-delete',\n                valueOut: 'ss-value-out',\n                deselect: 'ss-deselect',\n                deselectPath: 'M10,10 L90,90 M10,90 L90,10',\n                arrow: 'ss-arrow',\n                arrowClose: 'M10,30 L50,70 L90,30',\n                arrowOpen: 'M10,70 L50,30 L90,70',\n                content: 'ss-content',\n                openAbove: 'ss-open-above',\n                openBelow: 'ss-open-below',\n                search: 'ss-search',\n                searchHighlighter: 'ss-search-highlight',\n                searching: 'ss-searching',\n                addable: 'ss-addable',\n                addablePath: 'M50,10 L50,90 M10,50 L90,50',\n                list: 'ss-list',\n                optgroup: 'ss-optgroup',\n                optgroupLabel: 'ss-optgroup-label',\n                optgroupLabelText: 'ss-optgroup-label-text',\n                optgroupActions: 'ss-optgroup-actions',\n                optgroupSelectAll: 'ss-selectall',\n                optgroupSelectAllBox: 'M60,10 L10,10 L10,90 L90,90 L90,50',\n                optgroupSelectAllCheck: 'M30,45 L50,70 L90,10',\n                optgroupClosable: 'ss-closable',\n                option: 'ss-option',\n                optionDelete: 'M10,10 L90,90 M10,90 L90,10',\n                highlighted: 'ss-highlighted',\n                open: 'ss-open',\n                close: 'ss-close',\n                selected: 'ss-selected',\n                error: 'ss-error',\n                disabled: 'ss-disabled',\n                hide: 'ss-hide',\n            };\n            this.store = store;\n            this.settings = settings;\n            this.callbacks = callbacks;\n            this.main = this.mainDiv();\n            this.content = this.contentDiv();\n            this.updateClassStyles();\n            this.updateAriaAttributes();\n            this.settings.contentLocation.appendChild(this.content.main);\n        }\n        enable() {\n            this.main.main.classList.remove(this.classes.disabled);\n            this.content.search.input.disabled = false;\n        }\n        disable() {\n            this.main.main.classList.add(this.classes.disabled);\n            this.content.search.input.disabled = true;\n        }\n        open() {\n            this.main.arrow.path.setAttribute('d', this.classes.arrowOpen);\n            this.main.main.classList.add(this.settings.openPosition === 'up' ? this.classes.openAbove : this.classes.openBelow);\n            this.main.main.setAttribute('aria-expanded', 'true');\n            this.moveContent();\n            const selectedOptions = this.store.getSelectedOptions();\n            if (selectedOptions.length) {\n                const selectedId = selectedOptions[selectedOptions.length - 1].id;\n                const selectedOption = this.content.list.querySelector('[data-id=\"' + selectedId + '\"]');\n                if (selectedOption) {\n                    this.ensureElementInView(this.content.list, selectedOption);\n                }\n            }\n        }\n        close() {\n            this.main.main.classList.remove(this.classes.openAbove);\n            this.main.main.classList.remove(this.classes.openBelow);\n            this.main.main.setAttribute('aria-expanded', 'false');\n            this.content.main.classList.remove(this.classes.openAbove);\n            this.content.main.classList.remove(this.classes.openBelow);\n            this.main.arrow.path.setAttribute('d', this.classes.arrowClose);\n        }\n        updateClassStyles() {\n            this.main.main.className = '';\n            this.main.main.removeAttribute('style');\n            this.content.main.className = '';\n            this.content.main.removeAttribute('style');\n            this.main.main.classList.add(this.classes.main);\n            this.content.main.classList.add(this.classes.content);\n            if (this.settings.style !== '') {\n                this.main.main.style.cssText = this.settings.style;\n                this.content.main.style.cssText = this.settings.style;\n            }\n            if (this.settings.class.length) {\n                for (const c of this.settings.class) {\n                    if (c.trim() !== '') {\n                        this.main.main.classList.add(c.trim());\n                        this.content.main.classList.add(c.trim());\n                    }\n                }\n            }\n            if (this.settings.contentPosition === 'relative') {\n                this.content.main.classList.add('ss-' + this.settings.contentPosition);\n            }\n        }\n        updateAriaAttributes() {\n            this.main.main.role = 'combobox';\n            this.main.main.setAttribute('aria-haspopup', 'listbox');\n            this.main.main.setAttribute('aria-controls', this.content.main.id);\n            this.main.main.setAttribute('aria-expanded', 'false');\n            this.content.main.setAttribute('role', 'listbox');\n        }\n        mainDiv() {\n            var _a;\n            const main = document.createElement('div');\n            main.dataset.id = this.settings.id;\n            main.id = this.settings.id;\n            main.tabIndex = 0;\n            main.onkeydown = (e) => {\n                switch (e.key) {\n                    case 'ArrowUp':\n                    case 'ArrowDown':\n                        this.callbacks.open();\n                        e.key === 'ArrowDown' ? this.highlight('down') : this.highlight('up');\n                        return false;\n                    case 'Tab':\n                        this.callbacks.close();\n                        return true;\n                    case 'Enter':\n                    case ' ':\n                        this.callbacks.open();\n                        const highlighted = this.content.list.querySelector('.' + this.classes.highlighted);\n                        if (highlighted) {\n                            highlighted.click();\n                        }\n                        return false;\n                    case 'Escape':\n                        this.callbacks.close();\n                        return false;\n                }\n            };\n            main.onclick = (e) => {\n                if (this.settings.disabled) {\n                    return;\n                }\n                this.settings.isOpen ? this.callbacks.close() : this.callbacks.open();\n            };\n            const values = document.createElement('div');\n            values.classList.add(this.classes.values);\n            main.appendChild(values);\n            const deselect = document.createElement('div');\n            deselect.classList.add(this.classes.deselect);\n            const selectedOptions = (_a = this.store) === null || _a === void 0 ? void 0 : _a.getSelectedOptions();\n            if (!this.settings.allowDeselect || (this.settings.isMultiple && selectedOptions && selectedOptions.length <= 0)) {\n                deselect.classList.add(this.classes.hide);\n            }\n            else {\n                deselect.classList.remove(this.classes.hide);\n            }\n            deselect.onclick = (e) => {\n                e.stopPropagation();\n                if (this.settings.disabled) {\n                    return;\n                }\n                let shouldDelete = true;\n                const before = this.store.getSelectedOptions();\n                const after = [];\n                if (this.callbacks.beforeChange) {\n                    shouldDelete = this.callbacks.beforeChange(after, before) === true;\n                }\n                if (shouldDelete) {\n                    if (this.settings.isMultiple) {\n                        this.callbacks.setSelected([], false);\n                        this.updateDeselectAll();\n                    }\n                    else {\n                        this.callbacks.setSelected([''], false);\n                    }\n                    if (this.settings.closeOnSelect) {\n                        this.callbacks.close();\n                    }\n                    if (this.callbacks.afterChange) {\n                        this.callbacks.afterChange(after);\n                    }\n                }\n            };\n            const deselectSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n            deselectSvg.setAttribute('viewBox', '0 0 100 100');\n            const deselectPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            deselectPath.setAttribute('d', this.classes.deselectPath);\n            deselectSvg.appendChild(deselectPath);\n            deselect.appendChild(deselectSvg);\n            main.appendChild(deselect);\n            const arrow = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n            arrow.classList.add(this.classes.arrow);\n            arrow.setAttribute('viewBox', '0 0 100 100');\n            const arrowPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            arrowPath.setAttribute('d', this.classes.arrowClose);\n            if (this.settings.alwaysOpen) {\n                arrow.classList.add(this.classes.hide);\n            }\n            arrow.appendChild(arrowPath);\n            main.appendChild(arrow);\n            return {\n                main: main,\n                values: values,\n                deselect: {\n                    main: deselect,\n                    svg: deselectSvg,\n                    path: deselectPath,\n                },\n                arrow: {\n                    main: arrow,\n                    path: arrowPath,\n                },\n            };\n        }\n        mainFocus(eventType) {\n            if (eventType !== 'click') {\n                this.main.main.focus({ preventScroll: true });\n            }\n        }\n        placeholder() {\n            const placeholderOption = this.store.filter((o) => o.placeholder, false);\n            let placeholderText = this.settings.placeholderText;\n            if (placeholderOption.length) {\n                if (placeholderOption[0].html !== '') {\n                    placeholderText = placeholderOption[0].html;\n                }\n                else if (placeholderOption[0].text !== '') {\n                    placeholderText = placeholderOption[0].text;\n                }\n            }\n            const placeholder = document.createElement('div');\n            placeholder.classList.add(this.classes.placeholder);\n            placeholder.innerHTML = placeholderText;\n            return placeholder;\n        }\n        renderValues() {\n            if (!this.settings.isMultiple) {\n                this.renderSingleValue();\n                return;\n            }\n            this.renderMultipleValues();\n        }\n        renderSingleValue() {\n            const selected = this.store.filter((o) => {\n                return o.selected && !o.placeholder;\n            }, false);\n            const selectedSingle = selected.length > 0 ? selected[0] : null;\n            if (!selectedSingle) {\n                this.main.values.innerHTML = this.placeholder().outerHTML;\n            }\n            else {\n                const singleValue = document.createElement('div');\n                singleValue.classList.add(this.classes.single);\n                if (selectedSingle.html) {\n                    singleValue.innerHTML = selectedSingle.html;\n                }\n                else {\n                    singleValue.innerText = selectedSingle.text;\n                }\n                this.main.values.innerHTML = singleValue.outerHTML;\n            }\n            if (!this.settings.allowDeselect || !selected.length) {\n                this.main.deselect.main.classList.add(this.classes.hide);\n            }\n            else {\n                this.main.deselect.main.classList.remove(this.classes.hide);\n            }\n        }\n        renderMultipleValues() {\n            let currentNodes = this.main.values.childNodes;\n            let selectedOptions = this.store.filter((opt) => {\n                return opt.selected && opt.display;\n            }, false);\n            if (selectedOptions.length === 0) {\n                this.main.values.innerHTML = this.placeholder().outerHTML;\n                return;\n            }\n            else {\n                const placeholder = this.main.values.querySelector('.' + this.classes.placeholder);\n                if (placeholder) {\n                    placeholder.remove();\n                }\n            }\n            if (selectedOptions.length > this.settings.maxValuesShown) {\n                const singleValue = document.createElement('div');\n                singleValue.classList.add(this.classes.max);\n                singleValue.textContent = this.settings.maxValuesMessage.replace('{number}', selectedOptions.length.toString());\n                this.main.values.innerHTML = singleValue.outerHTML;\n                return;\n            }\n            else {\n                const maxValuesMessage = this.main.values.querySelector('.' + this.classes.max);\n                if (maxValuesMessage) {\n                    maxValuesMessage.remove();\n                }\n            }\n            let removeNodes = [];\n            for (let i = 0; i < currentNodes.length; i++) {\n                const node = currentNodes[i];\n                const id = node.getAttribute('data-id');\n                if (id) {\n                    const found = selectedOptions.filter((opt) => {\n                        return opt.id === id;\n                    }, false);\n                    if (!found.length) {\n                        removeNodes.push(node);\n                    }\n                }\n            }\n            for (const n of removeNodes) {\n                n.classList.add(this.classes.valueOut);\n                setTimeout(() => {\n                    if (this.main.values.hasChildNodes() && this.main.values.contains(n)) {\n                        this.main.values.removeChild(n);\n                    }\n                }, 100);\n            }\n            currentNodes = this.main.values.childNodes;\n            for (let d = 0; d < selectedOptions.length; d++) {\n                let shouldAdd = true;\n                for (let i = 0; i < currentNodes.length; i++) {\n                    if (selectedOptions[d].id === String(currentNodes[i].dataset.id)) {\n                        shouldAdd = false;\n                    }\n                }\n                if (shouldAdd) {\n                    if (currentNodes.length === 0) {\n                        this.main.values.appendChild(this.multipleValue(selectedOptions[d]));\n                    }\n                    else if (d === 0) {\n                        this.main.values.insertBefore(this.multipleValue(selectedOptions[d]), currentNodes[d]);\n                    }\n                    else {\n                        currentNodes[d - 1].insertAdjacentElement('afterend', this.multipleValue(selectedOptions[d]));\n                    }\n                }\n            }\n            this.updateDeselectAll();\n        }\n        multipleValue(option) {\n            const value = document.createElement('div');\n            value.classList.add(this.classes.value);\n            value.dataset.id = option.id;\n            const text = document.createElement('div');\n            text.classList.add(this.classes.valueText);\n            text.innerText = option.text;\n            value.appendChild(text);\n            if (!option.mandatory) {\n                const deleteDiv = document.createElement('div');\n                deleteDiv.classList.add(this.classes.valueDelete);\n                deleteDiv.onclick = (e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (this.settings.disabled) {\n                        return;\n                    }\n                    let shouldDelete = true;\n                    const before = this.store.getSelectedOptions();\n                    const after = before.filter((o) => {\n                        return o.selected && o.id !== option.id;\n                    }, true);\n                    if (this.settings.minSelected && after.length < this.settings.minSelected) {\n                        return;\n                    }\n                    if (this.callbacks.beforeChange) {\n                        shouldDelete = this.callbacks.beforeChange(after, before) === true;\n                    }\n                    if (shouldDelete) {\n                        let selectedValues = [];\n                        for (const o of after) {\n                            if (o instanceof Optgroup) {\n                                for (const c of o.options) {\n                                    selectedValues.push(c.value);\n                                }\n                            }\n                            if (o instanceof Option) {\n                                selectedValues.push(o.value);\n                            }\n                        }\n                        this.callbacks.setSelected(selectedValues, false);\n                        if (this.settings.closeOnSelect) {\n                            this.callbacks.close();\n                        }\n                        if (this.callbacks.afterChange) {\n                            this.callbacks.afterChange(after);\n                        }\n                        this.updateDeselectAll();\n                    }\n                };\n                const deleteSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                deleteSvg.setAttribute('viewBox', '0 0 100 100');\n                const deletePath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                deletePath.setAttribute('d', this.classes.optionDelete);\n                deleteSvg.appendChild(deletePath);\n                deleteDiv.appendChild(deleteSvg);\n                value.appendChild(deleteDiv);\n            }\n            return value;\n        }\n        contentDiv() {\n            const main = document.createElement('div');\n            main.dataset.id = this.settings.id;\n            main.id = this.settings.id;\n            const search = this.searchDiv();\n            main.appendChild(search.main);\n            const list = this.listDiv();\n            main.appendChild(list);\n            return {\n                main: main,\n                search: search,\n                list: list,\n            };\n        }\n        moveContent() {\n            if (this.settings.contentPosition === 'relative') {\n                this.moveContentBelow();\n                return;\n            }\n            if (this.settings.openPosition === 'down') {\n                this.moveContentBelow();\n                return;\n            }\n            else if (this.settings.openPosition === 'up') {\n                this.moveContentAbove();\n                return;\n            }\n            if (this.putContent() === 'up') {\n                this.moveContentAbove();\n            }\n            else {\n                this.moveContentBelow();\n            }\n        }\n        searchDiv() {\n            const main = document.createElement('div');\n            const input = document.createElement('input');\n            const addable = document.createElement('div');\n            main.classList.add(this.classes.search);\n            const searchReturn = {\n                main,\n                input,\n            };\n            if (!this.settings.showSearch) {\n                main.classList.add(this.classes.hide);\n                input.readOnly = true;\n            }\n            input.type = 'search';\n            input.placeholder = this.settings.searchPlaceholder;\n            input.tabIndex = -1;\n            input.setAttribute('aria-label', this.settings.searchPlaceholder);\n            input.setAttribute('autocapitalize', 'off');\n            input.setAttribute('autocomplete', 'off');\n            input.setAttribute('autocorrect', 'off');\n            input.oninput = debounce((e) => {\n                this.callbacks.search(e.target.value);\n            }, 100);\n            input.onkeydown = (e) => {\n                switch (e.key) {\n                    case 'ArrowUp':\n                    case 'ArrowDown':\n                        e.key === 'ArrowDown' ? this.highlight('down') : this.highlight('up');\n                        return false;\n                    case 'Tab':\n                        this.callbacks.close();\n                        return true;\n                    case 'Escape':\n                        this.callbacks.close();\n                        return false;\n                    case 'Enter':\n                    case ' ':\n                        if (this.callbacks.addable && e.ctrlKey) {\n                            addable.click();\n                            return false;\n                        }\n                        else {\n                            const highlighted = this.content.list.querySelector('.' + this.classes.highlighted);\n                            if (highlighted) {\n                                highlighted.click();\n                                return false;\n                            }\n                        }\n                        return true;\n                }\n            };\n            main.appendChild(input);\n            if (this.callbacks.addable) {\n                addable.classList.add(this.classes.addable);\n                const plus = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                plus.setAttribute('viewBox', '0 0 100 100');\n                const plusPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                plusPath.setAttribute('d', this.classes.addablePath);\n                plus.appendChild(plusPath);\n                addable.appendChild(plus);\n                addable.onclick = (e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (!this.callbacks.addable) {\n                        return;\n                    }\n                    const inputValue = this.content.search.input.value.trim();\n                    if (inputValue === '') {\n                        this.content.search.input.focus();\n                        return;\n                    }\n                    const runFinish = (oo) => {\n                        let newOption = new Option(oo);\n                        this.callbacks.addOption(newOption);\n                        if (this.settings.isMultiple) {\n                            let values = this.store.getSelected();\n                            values.push(newOption.value);\n                            this.callbacks.setSelected(values, true);\n                        }\n                        else {\n                            this.callbacks.setSelected([newOption.value], true);\n                        }\n                        this.callbacks.search('');\n                        if (this.settings.closeOnSelect) {\n                            setTimeout(() => {\n                                this.callbacks.close();\n                            }, 100);\n                        }\n                    };\n                    const addableValue = this.callbacks.addable(inputValue);\n                    if (addableValue === false || addableValue === undefined || addableValue === null) {\n                        return;\n                    }\n                    if (addableValue instanceof Promise) {\n                        addableValue.then((value) => {\n                            if (typeof value === 'string') {\n                                runFinish({\n                                    text: value,\n                                    value: value,\n                                });\n                            }\n                            else {\n                                runFinish(value);\n                            }\n                        });\n                    }\n                    else if (typeof addableValue === 'string') {\n                        runFinish({\n                            text: addableValue,\n                            value: addableValue,\n                        });\n                    }\n                    else {\n                        runFinish(addableValue);\n                    }\n                    return;\n                };\n                main.appendChild(addable);\n                searchReturn.addable = {\n                    main: addable,\n                    svg: plus,\n                    path: plusPath,\n                };\n            }\n            return searchReturn;\n        }\n        searchFocus() {\n            this.content.search.input.focus();\n        }\n        getOptions(notPlaceholder = false, notDisabled = false, notHidden = false) {\n            let query = '.' + this.classes.option;\n            if (notPlaceholder) {\n                query += ':not(.' + this.classes.placeholder + ')';\n            }\n            if (notDisabled) {\n                query += ':not(.' + this.classes.disabled + ')';\n            }\n            if (notHidden) {\n                query += ':not(.' + this.classes.hide + ')';\n            }\n            return Array.from(this.content.list.querySelectorAll(query));\n        }\n        highlight(dir) {\n            const options = this.getOptions(true, true, true);\n            if (options.length === 0) {\n                return;\n            }\n            if (options.length === 1) {\n                if (!options[0].classList.contains(this.classes.highlighted)) {\n                    options[0].classList.add(this.classes.highlighted);\n                    return;\n                }\n            }\n            for (let i = 0; i < options.length; i++) {\n                if (options[i].classList.contains(this.classes.highlighted)) {\n                    const prevOption = options[i];\n                    prevOption.classList.remove(this.classes.highlighted);\n                    const prevParent = prevOption.parentElement;\n                    if (prevParent && prevParent.classList.contains(this.classes.open)) {\n                        const optgroupLabel = prevParent.querySelector('.' + this.classes.optgroupLabel);\n                        if (optgroupLabel) {\n                            optgroupLabel.click();\n                        }\n                    }\n                    let selectOption = options[dir === 'down' ? (i + 1 < options.length ? i + 1 : 0) : i - 1 >= 0 ? i - 1 : options.length - 1];\n                    selectOption.classList.add(this.classes.highlighted);\n                    this.ensureElementInView(this.content.list, selectOption);\n                    const selectParent = selectOption.parentElement;\n                    if (selectParent && selectParent.classList.contains(this.classes.close)) {\n                        const optgroupLabel = selectParent.querySelector('.' + this.classes.optgroupLabel);\n                        if (optgroupLabel) {\n                            optgroupLabel.click();\n                        }\n                    }\n                    return;\n                }\n            }\n            options[dir === 'down' ? 0 : options.length - 1].classList.add(this.classes.highlighted);\n            this.ensureElementInView(this.content.list, options[dir === 'down' ? 0 : options.length - 1]);\n        }\n        listDiv() {\n            const options = document.createElement('div');\n            options.classList.add(this.classes.list);\n            return options;\n        }\n        renderError(error) {\n            this.content.list.innerHTML = '';\n            const errorDiv = document.createElement('div');\n            errorDiv.classList.add(this.classes.error);\n            errorDiv.textContent = error;\n            this.content.list.appendChild(errorDiv);\n        }\n        renderSearching() {\n            this.content.list.innerHTML = '';\n            const searchingDiv = document.createElement('div');\n            searchingDiv.classList.add(this.classes.searching);\n            searchingDiv.textContent = this.settings.searchingText;\n            this.content.list.appendChild(searchingDiv);\n        }\n        renderOptions(data) {\n            this.content.list.innerHTML = '';\n            if (data.length === 0) {\n                const noResults = document.createElement('div');\n                noResults.classList.add(this.classes.search);\n                noResults.innerHTML = this.settings.searchText;\n                this.content.list.appendChild(noResults);\n                return;\n            }\n            for (const d of data) {\n                if (d instanceof Optgroup) {\n                    const optgroupEl = document.createElement('div');\n                    optgroupEl.classList.add(this.classes.optgroup);\n                    const optgroupLabel = document.createElement('div');\n                    optgroupLabel.classList.add(this.classes.optgroupLabel);\n                    optgroupEl.appendChild(optgroupLabel);\n                    const optgroupLabelText = document.createElement('div');\n                    optgroupLabelText.classList.add(this.classes.optgroupLabelText);\n                    optgroupLabelText.textContent = d.label;\n                    optgroupLabel.appendChild(optgroupLabelText);\n                    const optgroupActions = document.createElement('div');\n                    optgroupActions.classList.add(this.classes.optgroupActions);\n                    optgroupLabel.appendChild(optgroupActions);\n                    if (this.settings.isMultiple && d.selectAll) {\n                        const selectAll = document.createElement('div');\n                        selectAll.classList.add(this.classes.optgroupSelectAll);\n                        let allSelected = true;\n                        for (const o of d.options) {\n                            if (!o.selected) {\n                                allSelected = false;\n                                break;\n                            }\n                        }\n                        if (allSelected) {\n                            selectAll.classList.add(this.classes.selected);\n                        }\n                        const selectAllText = document.createElement('span');\n                        selectAllText.textContent = 'Select All';\n                        selectAll.appendChild(selectAllText);\n                        const selectAllSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                        selectAllSvg.setAttribute('viewBox', '0 0 100 100');\n                        selectAll.appendChild(selectAllSvg);\n                        const selectAllBox = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                        selectAllBox.setAttribute('d', this.classes.optgroupSelectAllBox);\n                        selectAllSvg.appendChild(selectAllBox);\n                        const selectAllCheck = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                        selectAllCheck.setAttribute('d', this.classes.optgroupSelectAllCheck);\n                        selectAllSvg.appendChild(selectAllCheck);\n                        selectAll.addEventListener('click', (e) => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            const currentSelected = this.store.getSelected();\n                            if (allSelected) {\n                                const newSelected = currentSelected.filter((s) => {\n                                    for (const o of d.options) {\n                                        if (s === o.value) {\n                                            return false;\n                                        }\n                                    }\n                                    return true;\n                                });\n                                this.callbacks.setSelected(newSelected, true);\n                                return;\n                            }\n                            else {\n                                const newSelected = currentSelected.concat(d.options.map((o) => o.value));\n                                this.callbacks.setSelected(newSelected, true);\n                            }\n                        });\n                        optgroupActions.appendChild(selectAll);\n                    }\n                    if (d.closable !== 'off') {\n                        const optgroupClosable = document.createElement('div');\n                        optgroupClosable.classList.add(this.classes.optgroupClosable);\n                        const optgroupClosableSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                        optgroupClosableSvg.setAttribute('viewBox', '0 0 100 100');\n                        optgroupClosableSvg.classList.add(this.classes.arrow);\n                        optgroupClosable.appendChild(optgroupClosableSvg);\n                        const optgroupClosableArrow = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                        optgroupClosableSvg.appendChild(optgroupClosableArrow);\n                        if (d.options.some((o) => o.selected) || this.content.search.input.value.trim() !== '') {\n                            optgroupClosable.classList.add(this.classes.open);\n                            optgroupClosableArrow.setAttribute('d', this.classes.arrowOpen);\n                        }\n                        else if (d.closable === 'open') {\n                            optgroupEl.classList.add(this.classes.open);\n                            optgroupClosableArrow.setAttribute('d', this.classes.arrowOpen);\n                        }\n                        else if (d.closable === 'close') {\n                            optgroupEl.classList.add(this.classes.close);\n                            optgroupClosableArrow.setAttribute('d', this.classes.arrowClose);\n                        }\n                        optgroupLabel.addEventListener('click', (e) => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            if (optgroupEl.classList.contains(this.classes.close)) {\n                                optgroupEl.classList.remove(this.classes.close);\n                                optgroupEl.classList.add(this.classes.open);\n                                optgroupClosableArrow.setAttribute('d', this.classes.arrowOpen);\n                            }\n                            else {\n                                optgroupEl.classList.remove(this.classes.open);\n                                optgroupEl.classList.add(this.classes.close);\n                                optgroupClosableArrow.setAttribute('d', this.classes.arrowClose);\n                            }\n                        });\n                        optgroupActions.appendChild(optgroupClosable);\n                    }\n                    optgroupEl.appendChild(optgroupLabel);\n                    for (const o of d.options) {\n                        optgroupEl.appendChild(this.option(o));\n                    }\n                    this.content.list.appendChild(optgroupEl);\n                }\n                if (d instanceof Option) {\n                    this.content.list.appendChild(this.option(d));\n                }\n            }\n        }\n        option(option) {\n            if (option.placeholder) {\n                const placeholder = document.createElement('div');\n                placeholder.classList.add(this.classes.option);\n                placeholder.classList.add(this.classes.hide);\n                return placeholder;\n            }\n            const optionEl = document.createElement('div');\n            optionEl.dataset.id = option.id;\n            optionEl.id = option.id;\n            optionEl.classList.add(this.classes.option);\n            optionEl.setAttribute('role', 'option');\n            if (option.class) {\n                option.class.split(' ').forEach((dataClass) => {\n                    optionEl.classList.add(dataClass);\n                });\n            }\n            if (option.style) {\n                optionEl.style.cssText = option.style;\n            }\n            if (this.settings.searchHighlight && this.content.search.input.value.trim() !== '') {\n                optionEl.innerHTML = this.highlightText(option.html !== '' ? option.html : option.text, this.content.search.input.value, this.classes.searchHighlighter);\n            }\n            else if (option.html !== '') {\n                optionEl.innerHTML = option.html;\n            }\n            else {\n                optionEl.textContent = option.text;\n            }\n            if (this.settings.showOptionTooltips && optionEl.textContent) {\n                optionEl.setAttribute('title', optionEl.textContent);\n            }\n            if (!option.display) {\n                optionEl.classList.add(this.classes.hide);\n            }\n            if (option.disabled) {\n                optionEl.classList.add(this.classes.disabled);\n            }\n            if (option.selected && this.settings.hideSelected) {\n                optionEl.classList.add(this.classes.hide);\n            }\n            if (option.selected) {\n                optionEl.classList.add(this.classes.selected);\n                optionEl.setAttribute('aria-selected', 'true');\n                this.main.main.setAttribute('aria-activedescendant', optionEl.id);\n            }\n            else {\n                optionEl.classList.remove(this.classes.selected);\n                optionEl.setAttribute('aria-selected', 'false');\n            }\n            optionEl.addEventListener('click', (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                const selectedOptions = this.store.getSelected();\n                const element = e.currentTarget;\n                const elementID = String(element.dataset.id);\n                if (option.disabled || (option.selected && !this.settings.allowDeselect)) {\n                    return;\n                }\n                if ((this.settings.isMultiple && this.settings.maxSelected <= selectedOptions.length && !option.selected) ||\n                    (this.settings.isMultiple && this.settings.minSelected >= selectedOptions.length && option.selected)) {\n                    return;\n                }\n                let shouldUpdate = false;\n                const before = this.store.getSelectedOptions();\n                let after = [];\n                if (this.settings.isMultiple) {\n                    if (option.selected) {\n                        after = before.filter((o) => o.id !== elementID);\n                    }\n                    else {\n                        after = before.concat(option);\n                    }\n                }\n                if (!this.settings.isMultiple) {\n                    if (option.selected) {\n                        after = [];\n                    }\n                    else {\n                        after = [option];\n                    }\n                }\n                if (!this.callbacks.beforeChange) {\n                    shouldUpdate = true;\n                }\n                if (this.callbacks.beforeChange) {\n                    if (this.callbacks.beforeChange(after, before) === false) {\n                        shouldUpdate = false;\n                    }\n                    else {\n                        shouldUpdate = true;\n                    }\n                }\n                if (shouldUpdate) {\n                    if (!this.store.getOptionByID(elementID)) {\n                        this.callbacks.addOption(option);\n                    }\n                    this.callbacks.setSelected(after.map((o) => o.value), false);\n                    if (this.settings.closeOnSelect) {\n                        this.callbacks.close();\n                    }\n                    if (this.callbacks.afterChange) {\n                        this.callbacks.afterChange(after);\n                    }\n                }\n            });\n            return optionEl;\n        }\n        destroy() {\n            this.main.main.remove();\n            this.content.main.remove();\n        }\n        highlightText(str, search, className) {\n            let completedString = str;\n            const regex = new RegExp('(' + search.trim() + ')(?![^<]*>[^<>]*</)', 'i');\n            if (!str.match(regex)) {\n                return str;\n            }\n            const matchStartPosition = str.match(regex).index;\n            const matchEndPosition = matchStartPosition + str.match(regex)[0].toString().length;\n            const originalTextFoundByRegex = str.substring(matchStartPosition, matchEndPosition);\n            completedString = completedString.replace(regex, `<mark class=\"${className}\">${originalTextFoundByRegex}</mark>`);\n            return completedString;\n        }\n        moveContentAbove() {\n            const mainHeight = this.main.main.offsetHeight;\n            const contentHeight = this.content.main.offsetHeight;\n            this.main.main.classList.remove(this.classes.openBelow);\n            this.main.main.classList.add(this.classes.openAbove);\n            this.content.main.classList.remove(this.classes.openBelow);\n            this.content.main.classList.add(this.classes.openAbove);\n            const containerRect = this.main.main.getBoundingClientRect();\n            this.content.main.style.margin = '-' + (mainHeight + contentHeight - 1) + 'px 0px 0px 0px';\n            this.content.main.style.top = containerRect.top + containerRect.height + window.scrollY + 'px';\n            this.content.main.style.left = containerRect.left + window.scrollX + 'px';\n            this.content.main.style.width = containerRect.width + 'px';\n        }\n        moveContentBelow() {\n            this.main.main.classList.remove(this.classes.openAbove);\n            this.main.main.classList.add(this.classes.openBelow);\n            this.content.main.classList.remove(this.classes.openAbove);\n            this.content.main.classList.add(this.classes.openBelow);\n            const containerRect = this.main.main.getBoundingClientRect();\n            this.content.main.style.margin = '-1px 0px 0px 0px';\n            if (this.settings.contentPosition !== 'relative') {\n                this.content.main.style.top = containerRect.top + containerRect.height + window.scrollY + 'px';\n                this.content.main.style.left = containerRect.left + window.scrollX + 'px';\n                this.content.main.style.width = containerRect.width + 'px';\n            }\n        }\n        ensureElementInView(container, element) {\n            const cTop = container.scrollTop + container.offsetTop;\n            const cBottom = cTop + container.clientHeight;\n            const eTop = element.offsetTop;\n            const eBottom = eTop + element.clientHeight;\n            if (eTop < cTop) {\n                container.scrollTop -= cTop - eTop;\n            }\n            else if (eBottom > cBottom) {\n                container.scrollTop += eBottom - cBottom;\n            }\n        }\n        putContent() {\n            const mainHeight = this.main.main.offsetHeight;\n            const mainRect = this.main.main.getBoundingClientRect();\n            const contentHeight = this.content.main.offsetHeight;\n            const spaceBelow = window.innerHeight - (mainRect.top + mainHeight);\n            if (spaceBelow <= contentHeight) {\n                if (mainRect.top > contentHeight) {\n                    return 'up';\n                }\n                else {\n                    return 'down';\n                }\n            }\n            return 'down';\n        }\n        updateDeselectAll() {\n            if (!this.store || !this.settings) {\n                return;\n            }\n            const selected = this.store.getSelectedOptions();\n            const hasSelectedItems = selected && selected.length > 0;\n            const isMultiple = this.settings.isMultiple;\n            const allowDeselect = this.settings.allowDeselect;\n            const deselectButton = this.main.deselect.main;\n            const hideClass = this.classes.hide;\n            if (allowDeselect && !(isMultiple && !hasSelectedItems)) {\n                deselectButton.classList.remove(hideClass);\n            }\n            else {\n                deselectButton.classList.add(hideClass);\n            }\n        }\n    }\n\n    class Select {\n        constructor(select) {\n            this.listen = false;\n            this.observer = null;\n            this.select = select;\n            this.select.addEventListener('change', this.valueChange.bind(this), {\n                passive: true,\n            });\n            this.observer = new MutationObserver(this.observeCall.bind(this));\n            this.changeListen(true);\n        }\n        enable() {\n            this.select.disabled = false;\n        }\n        disable() {\n            this.select.disabled = true;\n        }\n        hideUI() {\n            this.select.tabIndex = -1;\n            this.select.style.display = 'none';\n            this.select.setAttribute('aria-hidden', 'true');\n        }\n        showUI() {\n            this.select.removeAttribute('tabindex');\n            this.select.style.display = '';\n            this.select.removeAttribute('aria-hidden');\n        }\n        changeListen(listen) {\n            this.listen = listen;\n            if (listen) {\n                if (this.observer) {\n                    this.observer.observe(this.select, {\n                        subtree: true,\n                        childList: true,\n                        attributes: true,\n                    });\n                }\n            }\n            if (!listen) {\n                if (this.observer) {\n                    this.observer.disconnect();\n                }\n            }\n        }\n        valueChange(ev) {\n            if (this.listen && this.onValueChange) {\n                this.onValueChange(this.getSelectedValues());\n            }\n            return true;\n        }\n        observeCall(mutations) {\n            if (!this.listen) {\n                return;\n            }\n            let classChanged = false;\n            let disabledChanged = false;\n            let optgroupOptionChanged = false;\n            for (const m of mutations) {\n                if (m.target === this.select) {\n                    if (m.attributeName === 'disabled') {\n                        disabledChanged = true;\n                    }\n                    if (m.attributeName === 'class') {\n                        classChanged = true;\n                    }\n                }\n                if (m.target.nodeName === 'OPTGROUP' || m.target.nodeName === 'OPTION') {\n                    optgroupOptionChanged = true;\n                }\n            }\n            if (classChanged && this.onClassChange) {\n                this.onClassChange(this.select.className.split(' '));\n            }\n            if (disabledChanged && this.onDisabledChange) {\n                this.changeListen(false);\n                this.onDisabledChange(this.select.disabled);\n                this.changeListen(true);\n            }\n            if (optgroupOptionChanged && this.onOptionsChange) {\n                this.changeListen(false);\n                this.onOptionsChange(this.getData());\n                this.changeListen(true);\n            }\n        }\n        getData() {\n            let data = [];\n            const nodes = this.select.childNodes;\n            for (const n of nodes) {\n                if (n.nodeName === 'OPTGROUP') {\n                    data.push(this.getDataFromOptgroup(n));\n                }\n                if (n.nodeName === 'OPTION') {\n                    data.push(this.getDataFromOption(n));\n                }\n            }\n            return data;\n        }\n        getDataFromOptgroup(optgroup) {\n            let data = {\n                id: optgroup.id,\n                label: optgroup.label,\n                selectAll: optgroup.dataset ? optgroup.dataset.selectall === 'true' : false,\n                closable: optgroup.dataset ? optgroup.dataset.closable : 'off',\n                options: [],\n            };\n            const options = optgroup.childNodes;\n            for (const o of options) {\n                if (o.nodeName === 'OPTION') {\n                    data.options.push(this.getDataFromOption(o));\n                }\n            }\n            return data;\n        }\n        getDataFromOption(option) {\n            return {\n                id: option.id,\n                value: option.value,\n                text: option.text,\n                html: option.dataset && option.dataset.html ? option.dataset.html : '',\n                selected: option.selected,\n                display: option.style.display === 'none' ? false : true,\n                disabled: option.disabled,\n                mandatory: option.dataset ? option.dataset.mandatory === 'true' : false,\n                placeholder: option.dataset.placeholder === 'true',\n                class: option.className,\n                style: option.style.cssText,\n                data: option.dataset,\n            };\n        }\n        getSelectedValues() {\n            let values = [];\n            const options = this.select.childNodes;\n            for (const o of options) {\n                if (o.nodeName === 'OPTGROUP') {\n                    const optgroupOptions = o.childNodes;\n                    for (const oo of optgroupOptions) {\n                        if (oo.nodeName === 'OPTION') {\n                            const option = oo;\n                            if (option.selected) {\n                                values.push(option.value);\n                            }\n                        }\n                    }\n                }\n                if (o.nodeName === 'OPTION') {\n                    const option = o;\n                    if (option.selected) {\n                        values.push(option.value);\n                    }\n                }\n            }\n            return values;\n        }\n        setSelected(value) {\n            this.changeListen(false);\n            const options = this.select.childNodes;\n            for (const o of options) {\n                if (o.nodeName === 'OPTGROUP') {\n                    const optgroup = o;\n                    const optgroupOptions = optgroup.childNodes;\n                    for (const oo of optgroupOptions) {\n                        if (oo.nodeName === 'OPTION') {\n                            const option = oo;\n                            option.selected = value.includes(option.value);\n                        }\n                    }\n                }\n                if (o.nodeName === 'OPTION') {\n                    const option = o;\n                    option.selected = value.includes(option.value);\n                }\n            }\n            this.changeListen(true);\n        }\n        updateSelect(id, style, classes) {\n            this.changeListen(false);\n            if (id) {\n                this.select.dataset.id = id;\n            }\n            if (style) {\n                this.select.style.cssText = style;\n            }\n            if (classes) {\n                this.select.className = '';\n                classes.forEach((c) => {\n                    if (c.trim() !== '') {\n                        this.select.classList.add(c.trim());\n                    }\n                });\n            }\n            this.changeListen(true);\n        }\n        updateOptions(data) {\n            this.changeListen(false);\n            this.select.innerHTML = '';\n            for (const d of data) {\n                if (d instanceof Optgroup) {\n                    this.select.appendChild(this.createOptgroup(d));\n                }\n                if (d instanceof Option) {\n                    this.select.appendChild(this.createOption(d));\n                }\n            }\n            this.select.dispatchEvent(new Event('change'));\n            this.changeListen(true);\n        }\n        createOptgroup(optgroup) {\n            const optgroupEl = document.createElement('optgroup');\n            optgroupEl.id = optgroup.id;\n            optgroupEl.label = optgroup.label;\n            if (optgroup.selectAll) {\n                optgroupEl.dataset.selectAll = 'true';\n            }\n            if (optgroup.closable !== 'off') {\n                optgroupEl.dataset.closable = optgroup.closable;\n            }\n            if (optgroup.options) {\n                for (const o of optgroup.options) {\n                    optgroupEl.appendChild(this.createOption(o));\n                }\n            }\n            return optgroupEl;\n        }\n        createOption(info) {\n            const optionEl = document.createElement('option');\n            optionEl.id = info.id;\n            optionEl.value = info.value;\n            optionEl.innerHTML = info.text;\n            if (info.html !== '') {\n                optionEl.setAttribute('data-html', info.html);\n            }\n            if (info.selected) {\n                optionEl.selected = info.selected;\n            }\n            if (info.disabled) {\n                optionEl.disabled = true;\n            }\n            if (info.display === false) {\n                optionEl.style.display = 'none';\n            }\n            if (info.placeholder) {\n                optionEl.setAttribute('data-placeholder', 'true');\n            }\n            if (info.mandatory) {\n                optionEl.setAttribute('data-mandatory', 'true');\n            }\n            if (info.class) {\n                info.class.split(' ').forEach((optionClass) => {\n                    optionEl.classList.add(optionClass);\n                });\n            }\n            if (info.data && typeof info.data === 'object') {\n                Object.keys(info.data).forEach((key) => {\n                    optionEl.setAttribute('data-' + kebabCase(key), info.data[key]);\n                });\n            }\n            return optionEl;\n        }\n        destroy() {\n            this.changeListen(false);\n            this.select.removeEventListener('change', this.valueChange.bind(this));\n            if (this.observer) {\n                this.observer.disconnect();\n                this.observer = null;\n            }\n            delete this.select.dataset.id;\n            this.showUI();\n        }\n    }\n\n    class SlimSelect {\n        constructor(config) {\n            var _a;\n            this.events = {\n                search: undefined,\n                searchFilter: (opt, search) => {\n                    return opt.text.toLowerCase().indexOf(search.toLowerCase()) !== -1;\n                },\n                addable: undefined,\n                beforeChange: undefined,\n                afterChange: undefined,\n                beforeOpen: undefined,\n                afterOpen: undefined,\n                beforeClose: undefined,\n                afterClose: undefined,\n            };\n            this.windowResize = debounce(() => {\n                if (!this.settings.isOpen && !this.settings.isFullOpen) {\n                    return;\n                }\n                this.render.moveContent();\n            });\n            this.windowScroll = debounce(() => {\n                if (!this.settings.isOpen && !this.settings.isFullOpen) {\n                    return;\n                }\n                this.render.moveContent();\n            });\n            this.documentClick = (e) => {\n                if (!this.settings.isOpen) {\n                    return;\n                }\n                if (e.target && !hasClassInTree(e.target, this.settings.id)) {\n                    this.close(e.type);\n                }\n            };\n            this.windowVisibilityChange = () => {\n                if (document.hidden) {\n                    this.close();\n                }\n            };\n            this.selectEl = (typeof config.select === 'string' ? document.querySelector(config.select) : config.select);\n            if (!this.selectEl) {\n                if (config.events && config.events.error) {\n                    config.events.error(new Error('Could not find select element'));\n                }\n                return;\n            }\n            if (this.selectEl.tagName !== 'SELECT') {\n                if (config.events && config.events.error) {\n                    config.events.error(new Error('Element isnt of type select'));\n                }\n                return;\n            }\n            if (this.selectEl.dataset.ssid) {\n                this.destroy();\n            }\n            this.settings = new Settings(config.settings);\n            const debounceEvents = ['afterChange', 'beforeOpen', 'afterOpen', 'beforeClose', 'afterClose'];\n            for (const key in config.events) {\n                if (!config.events.hasOwnProperty(key)) {\n                    continue;\n                }\n                if (debounceEvents.indexOf(key) !== -1) {\n                    this.events[key] = debounce(config.events[key], 100);\n                }\n                else {\n                    this.events[key] = config.events[key];\n                }\n            }\n            this.settings.disabled = ((_a = config.settings) === null || _a === void 0 ? void 0 : _a.disabled) ? config.settings.disabled : this.selectEl.disabled;\n            this.settings.isMultiple = this.selectEl.multiple;\n            this.settings.style = this.selectEl.style.cssText;\n            this.settings.class = this.selectEl.className.split(' ');\n            this.select = new Select(this.selectEl);\n            this.select.updateSelect(this.settings.id, this.settings.style, this.settings.class);\n            this.select.hideUI();\n            this.select.onValueChange = (values) => {\n                this.setSelected(values);\n            };\n            this.select.onClassChange = (classes) => {\n                this.settings.class = classes;\n                this.render.updateClassStyles();\n            };\n            this.select.onDisabledChange = (disabled) => {\n                if (disabled) {\n                    this.disable();\n                }\n                else {\n                    this.enable();\n                }\n            };\n            this.select.onOptionsChange = (data) => {\n                this.setData(data);\n            };\n            this.store = new Store(this.settings.isMultiple ? 'multiple' : 'single', config.data ? config.data : this.select.getData());\n            if (config.data) {\n                this.select.updateOptions(this.store.getData());\n            }\n            const callbacks = {\n                open: this.open.bind(this),\n                close: this.close.bind(this),\n                addable: this.events.addable ? this.events.addable : undefined,\n                setSelected: this.setSelected.bind(this),\n                addOption: this.addOption.bind(this),\n                search: this.search.bind(this),\n                beforeChange: this.events.beforeChange,\n                afterChange: this.events.afterChange,\n            };\n            this.render = new Render(this.settings, this.store, callbacks);\n            this.render.renderValues();\n            this.render.renderOptions(this.store.getData());\n            const selectAriaLabel = this.selectEl.getAttribute('aria-label');\n            const selectAriaLabelledBy = this.selectEl.getAttribute('aria-labelledby');\n            if (selectAriaLabel) {\n                this.render.main.main.setAttribute('aria-label', selectAriaLabel);\n            }\n            else if (selectAriaLabelledBy) {\n                this.render.main.main.setAttribute('aria-labelledby', selectAriaLabelledBy);\n            }\n            if (this.selectEl.parentNode) {\n                this.selectEl.parentNode.insertBefore(this.render.main.main, this.selectEl.nextSibling);\n            }\n            document.addEventListener('click', this.documentClick);\n            window.addEventListener('resize', this.windowResize, false);\n            if (this.settings.openPosition === 'auto') {\n                window.addEventListener('scroll', this.windowScroll, false);\n            }\n            document.addEventListener('visibilitychange', this.windowVisibilityChange);\n            if (this.settings.disabled) {\n                this.disable();\n            }\n            if (this.settings.alwaysOpen) {\n                this.open();\n            }\n            this.selectEl.slim = this;\n        }\n        enable() {\n            this.settings.disabled = false;\n            this.select.enable();\n            this.render.enable();\n        }\n        disable() {\n            this.settings.disabled = true;\n            this.select.disable();\n            this.render.disable();\n        }\n        getData() {\n            return this.store.getData();\n        }\n        setData(data) {\n            const selected = this.store.getSelected();\n            const err = this.store.validateDataArray(data);\n            if (err) {\n                if (this.events.error) {\n                    this.events.error(err);\n                }\n                return;\n            }\n            this.store.setData(data);\n            const dataClean = this.store.getData();\n            this.select.updateOptions(dataClean);\n            this.render.renderValues();\n            this.render.renderOptions(dataClean);\n            if (this.events.afterChange && !isEqual(selected, this.store.getSelected())) {\n                this.events.afterChange(this.store.getSelectedOptions());\n            }\n        }\n        getSelected() {\n            return this.store.getSelected();\n        }\n        setSelected(value, runAfterChange = true) {\n            const selected = this.store.getSelected();\n            this.store.setSelectedBy('value', Array.isArray(value) ? value : [value]);\n            const data = this.store.getData();\n            this.select.updateOptions(data);\n            this.render.renderValues();\n            if (this.render.content.search.input.value !== '') {\n                this.search(this.render.content.search.input.value);\n            }\n            else {\n                this.render.renderOptions(data);\n            }\n            if (runAfterChange && this.events.afterChange && !isEqual(selected, this.store.getSelected())) {\n                this.events.afterChange(this.store.getSelectedOptions());\n            }\n        }\n        addOption(option) {\n            const selected = this.store.getSelected();\n            if (!this.store.getDataOptions().some((o) => { var _a; return o.value === ((_a = option.value) !== null && _a !== void 0 ? _a : option.text); })) {\n                this.store.addOption(option);\n            }\n            const data = this.store.getData();\n            this.select.updateOptions(data);\n            this.render.renderValues();\n            this.render.renderOptions(data);\n            if (this.events.afterChange && !isEqual(selected, this.store.getSelected())) {\n                this.events.afterChange(this.store.getSelectedOptions());\n            }\n        }\n        open() {\n            if (this.settings.disabled || this.settings.isOpen) {\n                return;\n            }\n            if (this.events.beforeOpen) {\n                this.events.beforeOpen();\n            }\n            this.render.open();\n            if (this.settings.showSearch) {\n                this.render.searchFocus();\n            }\n            this.settings.isOpen = true;\n            setTimeout(() => {\n                if (this.events.afterOpen) {\n                    this.events.afterOpen();\n                }\n                if (this.settings.isOpen) {\n                    this.settings.isFullOpen = true;\n                }\n            }, this.settings.timeoutDelay);\n            if (this.settings.contentPosition === 'absolute') {\n                if (this.settings.intervalMove) {\n                    clearInterval(this.settings.intervalMove);\n                }\n                this.settings.intervalMove = setInterval(this.render.moveContent.bind(this.render), 500);\n            }\n        }\n        close(eventType = null) {\n            if (!this.settings.isOpen || this.settings.alwaysOpen) {\n                return;\n            }\n            if (this.events.beforeClose) {\n                this.events.beforeClose();\n            }\n            this.render.close();\n            if (this.render.content.search.input.value !== '') {\n                this.search('');\n            }\n            this.render.mainFocus(eventType);\n            this.settings.isOpen = false;\n            this.settings.isFullOpen = false;\n            setTimeout(() => {\n                if (this.events.afterClose) {\n                    this.events.afterClose();\n                }\n            }, this.settings.timeoutDelay);\n            if (this.settings.intervalMove) {\n                clearInterval(this.settings.intervalMove);\n            }\n        }\n        search(value) {\n            if (this.render.content.search.input.value !== value) {\n                this.render.content.search.input.value = value;\n            }\n            if (!this.events.search) {\n                this.render.renderOptions(value === '' ? this.store.getData() : this.store.search(value, this.events.searchFilter));\n                return;\n            }\n            this.render.renderSearching();\n            const searchResp = this.events.search(value, this.store.getSelectedOptions());\n            if (searchResp instanceof Promise) {\n                searchResp\n                    .then((data) => {\n                    this.render.renderOptions(this.store.partialToFullData(data));\n                })\n                    .catch((err) => {\n                    this.render.renderError(typeof err === 'string' ? err : err.message);\n                });\n                return;\n            }\n            else if (Array.isArray(searchResp)) {\n                this.render.renderOptions(this.store.partialToFullData(searchResp));\n            }\n            else {\n                this.render.renderError('Search event must return a promise or an array of data');\n            }\n        }\n        destroy() {\n            document.removeEventListener('click', this.documentClick);\n            window.removeEventListener('resize', this.windowResize, false);\n            if (this.settings.openPosition === 'auto') {\n                window.removeEventListener('scroll', this.windowScroll, false);\n            }\n            document.removeEventListener('visibilitychange', this.windowVisibilityChange);\n            this.store.setData([]);\n            this.render.destroy();\n            this.select.destroy();\n        }\n    }\n\n    return SlimSelect;\n\n}));\n","const BASE_URL = 'https://api.thecatapi.com/v1';\nconst API_KEY = 'live_wDeQ9bxxCJMfjPWRThAFvsbOODCWduPtHMt2TQUBnzzDXRYMcm4q1JvvTaqxZKHZ';\n\n\n function fetchBreeds() {\n  return  fetch(`${BASE_URL}/breeds?api_key=${API_KEY}`)\n    .then(response=>{\n        if(!response.ok){\n            throw new Error(response.status)\n        }\n        return response.json();\n    })\n    \n} \nfunction fetchCatByBreed(breedId){\n    return fetch(`${BASE_URL}/images/search?api_key=${API_KEY}&breed_ids=${breedId}`)\n    .then(response=>{\n        if(!response.ok){\n            throw new Error(response.status)\n        }\n        return response.json();\n    })\n}\n\nexport {fetchBreeds,fetchCatByBreed}\n    \n\n\n\n\n\n\n\n"],"names":["$ee27a4d7c64fc8c4$export$2e2bcd8739ae039","selektEl","document","querySelector","loaderEl","errorEl","catInfo","$423a972a0a91c60e$var$selektEl","$1f0dc3b9307be026$var$sel","$parcel$interopDefault","generateID","Math","random","toString","substring","hasClassInTree","element","className","hasClass","e","c","classList","contains","dataset","id","parentByClass","parentNode","debounce","func","wait","immediate","timeout","args","context","self","later","apply","callNow","clearTimeout","setTimeout","isEqual","a","b","JSON","stringify","kebabCase","str","result","replace","match","toLowerCase","toUpperCase","Settings","constructor","settings","this","style","class","isMultiple","isOpen","isFullOpen","intervalMove","disabled","undefined","alwaysOpen","showSearch","searchPlaceholder","searchText","searchingText","searchHighlight","closeOnSelect","contentLocation","body","contentPosition","openPosition","placeholderText","allowDeselect","hideSelected","showOptionTooltips","minSelected","maxSelected","timeoutDelay","maxValuesShown","maxValuesMessage","Optgroup","optgroup","label","selectAll","closable","options","o","push","Option","option","value","text","html","selected","display","mandatory","placeholder","data","Store","validateDataArray","Array","isArray","Error","dataObj","validateOption","partialToFullData","dataFinal","forEach","optOptions","length","setData","selectType","setSelectedBy","getSelected","getData","filter","getDataOptions","addOption","concat","selectedType","selectedValues","firstOption","hasSelected","includes","selectedOptions","getSelectedOptions","opt","getSelectedIDs","selectedIDs","op","getOptgroupByID","getOptionByID","search","searchFilter","trim","includeOptgroup","dataSearch","getSelectType","type","Render","enable","main","remove","classes","content","input","disable","add","open","arrow","path","setAttribute","arrowOpen","openAbove","openBelow","moveContent","store","selectedId","selectedOption","list","ensureElementInView","close","arrowClose","updateClassStyles","removeAttribute","cssText","updateAriaAttributes","role","mainDiv","_a","createElement","tabIndex","onkeydown","key","callbacks","highlight","highlighted","click","onclick","values","appendChild","deselect","hide","stopPropagation","shouldDelete","before","after","beforeChange","setSelected","updateDeselectAll","afterChange","deselectSvg","createElementNS","deselectPath","arrowPath","svg","mainFocus","eventType","focus","preventScroll","placeholderOption","innerHTML","renderValues","renderMultipleValues","renderSingleValue","selectedSingle","singleValue","single","innerText","outerHTML","currentNodes","childNodes","max","textContent","removeNodes","i","node","getAttribute","n","valueOut","hasChildNodes","removeChild","d","shouldAdd","String","multipleValue","insertBefore","insertAdjacentElement","valueText","deleteDiv","valueDelete","preventDefault","deleteSvg","deletePath","optionDelete","contentDiv","searchDiv","listDiv","putContent","moveContentAbove","moveContentBelow","addable","searchReturn","readOnly","oninput","target","ctrlKey","plus","plusPath","addablePath","inputValue","runFinish","oo","newOption","addableValue","Promise","then","searchFocus","getOptions","notPlaceholder","notDisabled","notHidden","query","from","querySelectorAll","dir","prevOption","prevParent","parentElement","optgroupLabel","selectOption","selectParent","renderError","error","errorDiv","renderSearching","searchingDiv","searching","renderOptions","noResults","optgroupEl","optgroupLabelText","optgroupActions","optgroupSelectAll","allSelected","o1","selectAllText","selectAllSvg","selectAllBox","optgroupSelectAllBox","selectAllCheck","optgroupSelectAllCheck","addEventListener","currentSelected","newSelected","s","map","optgroupClosable","optgroupClosableSvg","optgroupClosableArrow","some","o2","optionEl","split","dataClass","highlightText","searchHighlighter","currentTarget","elementID","shouldUpdate","destroy","completedString","regex","RegExp","matchStartPosition","index","matchEndPosition","originalTextFoundByRegex","mainHeight","offsetHeight","contentHeight","containerRect","getBoundingClientRect","margin","top","height","window","scrollY","left","scrollX","width","container","cTop","scrollTop","offsetTop","cBottom","clientHeight","eTop","eBottom","mainRect","innerHeight","hasSelectedItems","deselectButton","hideClass","Select","select","hideUI","showUI","changeListen","listen","observer","observe","subtree","childList","attributes","disconnect","valueChange","ev","onValueChange","getSelectedValues","observeCall","mutations","classChanged","disabledChanged","optgroupOptionChanged","m","attributeName","nodeName","onClassChange","onDisabledChange","onOptionsChange","nodes","getDataFromOptgroup","getDataFromOption","selectall","optgroupOptions","updateSelect","updateOptions","createOptgroup","createOption","dispatchEvent","Event","info","optionClass","Object","keys","removeEventListener","bind","passive","MutationObserver","SlimSelect","render","err","events","dataClean","runAfterChange","beforeOpen","afterOpen","clearInterval","setInterval","beforeClose","afterClose","searchResp","catch","message","documentClick","windowResize","windowScroll","windowVisibilityChange","config","indexOf","hidden","selectEl","tagName","ssid","debounceEvents","hasOwnProperty","multiple","selectAriaLabel","selectAriaLabelledBy","nextSibling","slim","factory","$1f0dc3b9307be026$var$selektEl","$1f0dc3b9307be026$var$catInfo","fetch","response","ok","status","json","name","console","log","breedId"],"version":3,"file":"index.d3ebf779.js.map"}